1、网络编程 ： Java net包
    -- InetAddress : 没有构造器，不能new对象
      --  静态方法： getLocalHost();  获得本地主机的名字和ip地址 ， 返回值为InetAddress类型
        -- getHostName(); 单独得到主机的名字
        -- getHostAddress()； 单独得到主机的ip地址
 
              InetAddress in = InetAddress.getLocalHost();   // 获得本地主机的名字和ip地址

		String name = in.getHostName();   // 单独得到主机的名字
		String ip = in.getHostAddress();  //单独得到主机的ip地址
		System.out.println(name+"  "+ip);

     --static getByName("其他计算机名字");  通过输入其他计算机的名字获取其ip地址， 直接调用，返回值为InetAddress类型
        InetAddress int1 = InetAddress.getByName("192.168.1.102");
         System.out.println(int1);

2、实现UDP的发送端：
     需要两个类：  
        ---DatagramPacket : 其构造方法 DatagramPacket(byte[] buf, int offset, int length, InetAddress address, int port（端口号）) 
	    可以实现数据的封装

	---DatagramSocket:  数据传输类， 空参构造， 通过其方法send（）进行传输， 然后关闭资源。
	  
	    // 要发送的那内容
		byte []bytes = "jdj".getBytes();
		// 获取接受端ip地址
		InetAddress ine = InetAddress.getByName("192.168.1.102");
		// 封装数据
		DatagramPacket dp =new DatagramPacket(bytes, bytes.length, ine, 6000);
		// 创建传输对象
		DatagramSocket ds = new DatagramSocket();
		// 发送数据
		ds.send(dp);
		// 关闭资源
		ds.close();

     实现UDP的接收端：1、用DatagramSocket（）类绑定端口号 2、准备好接受字节数组 3、准备接受数据包 DatagramPacket() 
     4、收包 receive5、拆包 （getPort() ，得到发送端的端口号  getAddress().getHostAddress(), 得到发送端的ip地址
     6、getLength() 得到发送数据的长度
           
		//先绑定端口号：
		DatagramSocket ds = new DatagramSocket(6066);
		// 准备接受字节数组
		byte []data = new byte[1024];
		// 准备接收包
		DatagramPacket dp = new DatagramPacket(data, data.length);
		// 取包
		ds.receive(dp);
		// 获取发送端的端口号
		int port = dp.getPort();
		// 获取传输数据的长度
		int length = dp.getLength();
		// 获取发送端的ip地址
		String s = dp.getAddress().getHostAddress();
		// 获取接到的内容
		System.out.println(new String(data,0,length));
		System.out.println(s);
		System.out.println(port);


7、客户端的与服务器之间的数据传输；
    
     TCPclient 客户端： 需要类Socket   构造方法： new Socket("服务器ip地址"， 端口号)；
                                   调用方法 getOutputStream(); 得到OutputStream 对象，进行数据的写入
				        Socket socket = new Socket("127.0.0.1", 8888);
					OutputStream out = socket.getOutputStream();
					out.write("niahoa".getBytes());
					out.close();

      TCPServer服务器： 需要类 ServerSocket  构造方法 ： new ServerSocket(端口号);
                                  调用方法accept(), 得到客户端套接字对象Socket.
				  通过Socket的getInputStream(), 对数据进行读取
				     ServerSocket serverSocket = new ServerSocket(8888);
		
						Socket socket = serverSocket.accept();
						InputStream in = socket.getInputStream();
						int len = 0;
						byte []bytes = new byte[1024];
						len = in.read(bytes);
						System.out.println(new String(bytes, 0, len ));

8、上传图片命名方式：
          公司名+毫秒值+随机六位数
                String filename = "hegongda"+System.currentTimeMillis()+new Random().nextInt(9999);
		FileOutputStream fos = new FileOutputStream(file+file.separator+filename);